var searchIndex = JSON.parse('{\
"bindingtester":{"doc":"","t":"NNNNNNNNNNNNNNNNNNNNNNNNNNNNNNENNNNHHHHNNNHHHHNNNNNNNNNDENNNHNNNNHNNNNNGDDDNNNNNNNNNNNNNENNNNNNNHNNNNLLLLLLLLLLLLLLLLLLLMMMMMMMMLLLLLLLLLLLLLLLLLMLLLLLLFLLLLLLLLMFLFLLMLLLLLLLLLLLLLLLLMLLLLLFLLLMMMMMFFLLMMMLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["AtomicOp","Cancel","Clear","ClearRange","Commit","Concat","Dead","DecodeDouble","DecodeFloat","Directory","DirectoryChange","DirectoryContains","DirectoryCreate","DirectoryCreateLayer","DirectoryCreateOrOpen","DirectoryCreateSubspace","DirectoryExists","DirectoryList","DirectoryLogDirectory","DirectoryLogSubspace","DirectoryMove","DirectoryMoveTo","DirectoryOpen","DirectoryOpenSubspace","DirectoryOutput","DirectoryPackKey","DirectoryRange","DirectoryRemove","DirectoryRemoveIfExists","DirectorySetErrorIndex","DirectoryStackItem","DirectoryStripPrefix","DirectoryUnpackKey","DisableWriteConflict","Dup","ERROR_DIRECTORY","ERROR_MULTIPLE","ERROR_NONE","ESTIMATE_RANGE_RESPONSE","EmptyStack","EncodeDouble","EncodeFloat","GET_RANGE_SPLIT_POINTS_RESPONSE","GOT_APPROXIMATE_SIZE_RESPONSE","GOT_COMMITTED_VERSION","GOT_READ_VERSION","Get","GetApproximateSize","GetCommittedVersion","GetEstimatedRangeSize","GetKey","GetRange","GetRangeSplitPoints","GetReadVersion","GetVersionstamp","Instr","InstrCode","LogStack","NewTransaction","Null","OK","OnError","Pending","Pop","Push","RESULT_NOT_PRESENT","ReadConflictKey","ReadConflictRange","Reset","Set","SetReadVersion","StackFuture","StackItem","StackMachine","StackResult","StartThread","Sub","Subspace","Swap","TenantClearActive","TenantCreate","TenantDelete","TenantList","TenantSetActive","Transaction","TransactionCancelled","TransactionCommitError","TransactionCommitted","TransactionState","TuplePack","TuplePackWithVersionstamp","TupleRange","TupleSort","TupleUnpack","UnitTests","UseTransaction","WAITED_FOR_EMPTY","WaitEmpty","WaitFuture","WriteConflictKey","WriteConflictRange","as_mut","await_fut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check","clone","clone_into","code","cur_transaction","data","data","database","directory_index","directory_stack","error_index","fetch_instr","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","fut","get_bytes_for_current_directory","get_current_directory","get_current_directory_item","get_layer_for_current_directory","get_path_for_current_directory","has_flags","has_opt","into","into","into","into","into","into","into","join","last_version","main","maybe_pop","mutation_from_str","new","next_trx_id","number","pack_with_current_subspace","pop","pop_bytes","pop_database","pop_element","pop_i32","pop_i64","pop_optional_bytes","pop_selector","pop_selector","pop_snapshot","pop_starts_with","pop_str","pop_string_tuple","pop_tenant","pop_usize","prefix","push","push_directory_err","push_err","push_fut","push_res","range","reset","run","run_step","selector","snapshot","stack","starts_with","state","streaming_from_value","strinc","subspace_with_current_item","take","tenant","tenant","threads","to_owned","transactions","trx_counter","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unpack_with_current_subspace","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"bindingtester"],[238,"foundationdb::transaction"],[239,"foundationdb::tuple"],[240,"core::option"],[241,"foundationdb::error"],[242,"core::result"],[243,"alloc::vec"],[244,"core::fmt"],[245,"core::fmt"],[246,"foundationdb::directory"],[247,"alloc::boxed"],[248,"alloc::string"],[249,"foundationdb::options"],[250,"foundationdb::database"],[251,"foundationdb::tuple::pack"],[252,"foundationdb::keyselector"],[253,"foundationdb::directory::error"],[254,"core::future::future"],[255,"core::pin"],[256,"alloc::sync"],[257,"foundationdb::options"],[258,"core::any"],[259,"foundationdb::tuple"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[16,16,16,16,16,16,1,16,16,15,16,16,16,16,16,16,16,16,16,16,16,16,16,16,15,16,16,16,16,16,0,16,16,16,16,0,0,0,0,16,16,16,0,0,0,0,16,16,16,16,16,16,16,16,16,0,0,16,16,15,0,16,1,16,16,0,16,16,16,16,16,0,0,0,0,16,16,15,16,16,16,16,16,16,1,1,1,1,0,16,16,16,16,16,16,16,0,16,16,16,16,1,3,11,20,3,1,7,15,16,11,20,3,1,7,15,16,7,3,3,11,7,20,3,11,7,7,7,7,11,3,1,15,16,11,11,20,20,20,20,3,1,7,15,16,3,7,7,7,7,7,11,0,11,20,3,1,7,15,16,7,7,0,7,0,7,7,3,7,7,7,11,7,7,7,7,11,7,11,11,7,7,11,7,7,7,7,7,7,7,0,1,7,7,11,11,7,11,20,0,0,7,1,11,7,7,3,7,7,11,20,3,1,7,15,16,11,20,3,1,7,15,16,11,20,3,1,7,15,16,7,11,20,3,1,7,15,16],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[3,[[6,[[5,[4,1]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[7,8,[9,[-1]]],[[10,[-1,5]]],[]],[3,3],[[-1,-2],5,[],[]],0,0,0,0,0,0,0,0,[[7,2],[[9,[[12,[11]]]]]],[[11,13],14],[[3,13],14],[[1,13],14],[[15,13],14],[[16,13],14],[-1,-1,[]],[[[18,[17]]],11],[-1,-1,[]],[19,20],[[[9,[21]]],20],[21,20],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[7,[[6,[[12,[17]]]]]],[7,[[6,[[23,[22]]]]]],[7,[[6,[15]]]],[7,[[6,[[18,[17]]]]]],[7,[[6,[[18,[24]]]]]],[11,25],[[26,26],[[5,[26,25]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[7,5],0,[[],5],[7,[[6,[3]]]],[26,27],[[28,4],7],[7,8],0,[[7,-1],[[6,[[12,[17]]]]],29],[7,3],[7,4],[11,25],[7,21],[7,30],[7,31],[7,[[6,[[12,[17]]]]]],[11,25],[7,32],[11,25],[11,25],[7,24],[[7,8],[[12,[[12,[24]]]]]],[11,25],[7,8],0,[[7,8,21],5],[[7,16,8,33],5],[[7,8,19],5],[[7,8,8,[35,[[23,[34]]]]],5],[[7,8,[9,[5]],[18,[17]]],5],[4,[[5,[4,4]]]],[1,5],[[7,[36,[28]]],[[9,[5]]]],[[7,[36,[28]],8,11],[[10,[5,5]]]],0,0,0,0,0,[30,37],[4,4],[[7,-1],[[6,[38]]],29],[[1,8],2],0,0,0,[-1,-2,[],[]],0,0,[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[-1,39,[]],[[7,[18,[17]]],[[6,[[40,[-1]]]]],41],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[4,"TransactionState",0],[3,"Transaction",238],[3,"StackItem",0],[3,"Bytes",239],[15,"tuple"],[4,"Option",240],[3,"StackMachine",0],[15,"usize"],[6,"FdbResult",241],[4,"Result",242],[3,"Instr",0],[3,"Vec",243],[3,"Formatter",244],[6,"Result",244],[4,"DirectoryStackItem",0],[4,"InstrCode",0],[15,"u8"],[15,"slice"],[3,"FdbError",241],[3,"StackResult",0],[4,"Element",245],[8,"Directory",246],[3,"Box",247],[3,"String",248],[15,"bool"],[15,"str"],[4,"MutationType",249],[3,"Database",250],[8,"TuplePack",251],[15,"i32"],[15,"i64"],[3,"KeySelector",252],[4,"DirectoryError",253],[8,"Future",254],[3,"Pin",255],[3,"Arc",256],[4,"StreamingMode",249],[3,"Subspace",257],[3,"TypeId",258],[6,"PackResult",239],[8,"TupleUnpack",251]]},\
"fdb_bench":{"doc":"","t":"DDDLLLLLLLLLLLLLMMLLLLLLMLLLMFLMMLLLMMLLLMLLLLLLLLLMLLL","n":["Bench","Counter","Opt","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clap","clone","clone","clone","clone_into","clone_into","clone_into","count","db","decr","fmt","from","from","from","from_clap","inner","into","into","into","key_len","main","new","opt","queue_depth","run","run_bench","run_range","size","threads","to_owned","to_owned","to_owned","trx_batch_size","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","val_len","vzip","vzip","vzip"],"q":[[0,"fdb_bench"],[55,"clap::app"],[56,"core::fmt"],[57,"core::fmt"],[58,"rand::rngs::mock"],[59,"foundationdb::error"],[60,"core::ops::range"],[61,"core::result"],[62,"core::any"]],"d":["","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,2,3,4,2,3,4,4,2,3,4,2,3,4,4,3,2,4,2,3,4,4,2,2,3,4,4,0,2,3,4,3,3,3,2,4,2,3,4,4,2,3,4,2,3,4,2,3,4,4,2,3,4],"f":[0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[2,2],[3,3],[4,4],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],0,0,[[2,6],7],[[4,8],9],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[10,4],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],5],[6,2],0,0,[3,5],[[3,11,2],[[12,[5]]]],[[3,[13,[6]],2],[[12,[5]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[-1,15,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[3,"App",55],[3,"Counter",0],[3,"Bench",0],[3,"Opt",0],[15,"tuple"],[15,"usize"],[15,"bool"],[3,"Formatter",56],[6,"Result",56],[3,"ArgMatches",57],[3,"StepRng",58],[6,"FdbResult",59],[3,"Range",60],[4,"Result",61],[3,"TypeId",62]]},\
"foundationdb":{"doc":"FoundationDB Rust Client API","t":"NDINNQEDGQNQDNNNDNDIDDDDDLALMFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFLLALLMALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLMALMLLLLLLLLLLALLLLLLMLMLLLLLLMAMLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLKLALLLLLLLLLLLLLLLLLLLLLLLLDDDDDDLLLLLLLLLLLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNNNNNNNNNNNINEDEDNNDNNNNNNNNNNNNNLLLLLLLLLLLLLLLLLLLLKLLLLKLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLKLLLLKLLLLLLKLLLLLLLLKLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDCDDDDCLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNNNNNNNNNNNNNNNNNNNNNNNNEENNNNNNNNNNNNENNNNNNNNNNNNNNNNNNNNEENNNNNNNNNNNNNNNNNNNNNNNNNNNENNNNNNNNNNNNNNNNNNNNNNNNNNNENNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDLLLLLLLLLLLLLLLLLLMLLLLMMLLLLLLLLLLLLLLLLNNNNNNDNNENNNNNNNSSSSNNNNEGNDNNDIINDNDNELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLFKLLLLLFLLLLFLLLLLLFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLFKLLLLLLLLLLLLLLLLLMMMMNEDNNNNLLLLLLLLLLLLLLLLLLLLLLLLL","n":["CustomError","Database","DatabaseTransact","DirectoryError","Err","Error","FdbBindingError","FdbError","FdbResult","Future","HcaError","Item","KeySelector","NonRetryableFdbError","Ok","PackError","RangeOption","ReferenceToTransactionKept","RetryableTransaction","TransactError","TransactOption","Transaction","TransactionCancelled","TransactionCommitError","TransactionCommitted","add_conflict_range","api","atomic_op","begin","boot","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cancel","clear","clear_range","clear_subspace_range","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","code","commit","committed_version","create_trx","default","default","default","default_config_path","deref","deref","directory","drop","drop","end","fdb_keys","first_greater_or_equal","first_greater_than","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_code","from_path","future","get","get_addresses_for_key","get_approximate_size","get_estimated_range_size_bytes","get_key","get_mapped_range","get_mapped_ranges","get_metadata_version","get_range","get_range_split_points","get_ranges","get_ranges_keyvalues","get_read_version","get_versionstamp","idempotent","into","into","into","into","into","into","into","into","into","into","into","is_idempotent","is_maybe_committed","is_retryable","is_retryable_not_committed","key","last_less_or_equal","last_less_than","limit","mapped_key_values","message","mode","new","new","new_compat","new_custom_error","new_from_pointer","next_range","offset","on_error","on_error","open_tenant","options","or_equal","perform_no_op","reset","reset","reset","reset","retry_limit","rev","reverse","run","set","set_option","set_option","set_raw_option","set_read_version","target_bytes","tenant","time_out","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","transact","transact","transact_boxed","transact_boxed_local","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_fdb_error","try_into_fdb_error","tuple","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_metadata_version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","watch","FdbApiBuilder","NetworkAutoStop","NetworkBuilder","NetworkRunner","NetworkStop","NetworkWait","boot","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","default","drop","from","from","from","from","from","from","get_max_api_version","into","into","into","into","into","into","run","runtime_version","set_option","set_runtime_version","stop","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","wait","BadDestinationDirectory","CannotCreateSubpath","CannotGetKeyDirectoryPartition","CannotModifyRootDirectory","CannotMoveBetweenPartition","CannotMoveBetweenSubdirectory","CannotMoveRootDirectory","CannotOpenDirectoryPartition","CannotPackDirectoryPartition","CannotPrefixInPartition","CannotRangeDirectoryPartition","CannotUnpackDirectoryPartition","DirAlreadyExists","Directory","DirectoryDoesNotExists","DirectoryError","DirectoryLayer","DirectoryOutput","DirectoryPartition","DirectoryPartition","DirectoryPrefixInUse","DirectorySubspace","DirectorySubspace","FdbError","HcaError","IncompatibleLayer","IoError","NoPathProvided","Other","PackError","ParentDirDoesNotExists","PathDoesNotExists","PrefixNotAllowed","PrefixNotEmpty","Version","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","bytes","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","create","create","create","create","create","create_or_open","create_or_open","create_or_open","create_or_open","create_or_open","default","deref","deref","exists","exists","exists","exists","exists","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","get_layer","get_layer","get_layer","get_path","get_path","get_path","get_path","into","into","into","into","into","is_start_of","list","list","list","list","list","move_directory","move_directory","move_directory","move_directory","move_directory","move_to","move_to","move_to","move_to","move_to","new","new","open","open","open","open","open","pack","pack","range","range","remove","remove","remove","remove","remove","remove_if_exists","remove_if_exists","remove_if_exists","remove_if_exists","remove_if_exists","set_path","subspace","subspace","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unpack","unpack","vzip","vzip","vzip","vzip","vzip","FdbKey","FdbKeys","FdbKeysIter","FdbRowKey","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","eq","eq","equivalent","equivalent","fmt","fmt","from","from","from","from","into","into","into","into","into_iter","into_iter","into_iter","key","next","nth","size_hint","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","FdbAddress","FdbAddresses","FdbKeyValue","FdbKeys","FdbSlice","FdbValue","FdbValues","FdbValuesIter","MappedKeyValues","as_ref","as_ref","as_ref","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref","eq","eq","equivalent","equivalent","fmt","fmt","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","key","len","more","next","next_back","nth","nth_back","size_hint","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","vzip","vzip","vzip","vzip","vzip","vzip","vzip","FdbMappedKeyValue","FdbMappedValue","FdbMappedValuesIter","MappedKeyValues","as_ref","as_ref","begin_range","begin_selector","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","end_range","end_selector","eq","eq","equivalent","equivalent","fmt","from","from","from","from","into","into","into","into","into_iter","into_iter","into_iter","key_values","len","more","next","next_back","nth","nth_back","parent_key","parent_value","size_hint","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","AccessSystemKeys","Add","And","AppendIfFits","AutoThrottleTag","BitAnd","BitOr","BitXor","BuggifyDisable","BuggifyEnable","BuggifySectionActivatedProbability","BuggifySectionFiredProbability","BypassUnreadable","ByteMax","ByteMin","CallbacksOnExternalThreads","CausalReadDisable","CausalReadRisky","CausalWriteRisky","ClientBuggifyDisable","ClientBuggifyEnable","ClientBuggifySectionActivatedProbability","ClientBuggifySectionFiredProbability","ClientThreadsPerVersion","ClusterFile","CompareAndClear","ConflictRangeType","DatabaseOption","DatacenterId","DebugRetryLogging","DebugTransactionIdentifier","DisableClientStatisticsLogging","DisableLocalClient","DisableMultiVersionClientApi","DistributedClientTracer","DurabilityDatacenter","DurabilityDevNullIsWebScale","DurabilityRisky","EnableRunLoopProfiling","EnableSlowTaskProfiling","ErrorPredicate","Exact","ExpensiveClearCostEstimationEnable","ExternalClientDirectory","ExternalClientLibrary","IncludePortInAddress","InitializeNewDatabase","Iterator","Knob","Large","LocalAddress","LocationCacheSize","LockAware","LogTransaction","MachineId","Max","MaxRetryDelay","MaxWatches","MaybeCommitted","Medium","Min","MutationType","NetworkOption","NextWriteNoWriteConflictRange","Or","PriorityBatch","PrioritySystemImmediate","RawAccess","Read","ReadAheadDisable","ReadLockAware","ReadSystemKeys","ReadYourWritesDisable","ReportConflictingKeys","RetryLimit","Retryable","RetryableNotCommitted","Serial","ServerRequestTracing","SetVersionstampedKey","SetVersionstampedValue","SizeLimit","Small","SnapshotRywDisable","SnapshotRywDisable","SnapshotRywEnable","SnapshotRywEnable","SpanParent","SpecialKeySpaceEnableWrites","SpecialKeySpaceRelaxed","StreamingMode","TLSCaBytes","TLSCaPath","TLSCertBytes","TLSCertPath","TLSKeyBytes","TLSKeyPath","TLSPassword","TLSPlugin","TLSVerifyPeers","Tag","TestCausalReadRisky","Timeout","TraceClockSource","TraceEnable","TraceFileIdentifier","TraceFormat","TraceLogGroup","TraceMaxLogsSize","TracePartialFileSuffix","TraceRollSize","TransactionBypassUnreadable","TransactionCausalReadRisky","TransactionIncludePortInAddress","TransactionLoggingEnable","TransactionLoggingMaxFieldLength","TransactionLoggingMaxFieldLength","TransactionMaxRetryDelay","TransactionOption","TransactionRetryLimit","TransactionSizeLimit","TransactionTimeout","UseConfigDatabase","UseGrvCache","UseProvisionalProxies","UsedDuringCommitProtectionDisable","WantAll","Write","Xor","apply","apply","apply","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","code","code","code","code","code","code","code","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","into","into","into","into","into","into","into","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","FdbTenant","TenantInfo","TenantManagement","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","create_tenant","create_trx","delete_tenant","deserialize","drop","fmt","fmt","from","from","from","get_name","get_tenant","id","into","into","into","list_tenant","name","prefix","run","serialize","transact","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","BadCode","BadPrefix","BadStringFormat","BadUuid","BigInt","Bool","Bytes","Bytes","Double","Element","Err","Float","Int","IoError","Message","MissingBytes","MultipleIncomplete","NAMESPACE_DNS","NAMESPACE_OID","NAMESPACE_URL","NAMESPACE_X500","Nil","None","Ok","OneIncomplete","PackError","PackResult","String","Subspace","TrailingBytes","Tuple","TupleDepth","TuplePack","TupleUnpack","UnsupportedIntLength","Uuid","Uuid","Versionstamp","Versionstamp","VersionstampOffset","add_assign","add_assign","all","as_bigint","as_bool","as_braced","as_bytes","as_bytes","as_bytes","as_f32","as_f64","as_fields","as_hyphenated","as_i64","as_ref","as_ref","as_simple","as_str","as_tuple","as_u128","as_u64_pair","as_urn","as_uuid","as_versionstamp","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","braced","bytes","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","complete","count_incomplete_versionstamp","default","depth","deref","encode_buffer","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes_le","from_bytes_ref","from_fields","from_fields_le","from_slice","from_slice_le","from_str","from_u128","from_u128_le","from_u64_pair","get_timestamp","get_variant","get_version","get_version_num","hash","hash","hash","hash","hash","hca","hyphenated","incomplete","increment","into","into","into","into","into","into","into","into","into_bytes","into_bytes","into_owned","into_owned","is_complete","is_max","is_nil","is_start_of","max","new_v4","nil","pack","pack","pack","pack","pack","pack","pack","pack_into","pack_into_vec","pack_into_vec","pack_into_vec_with_versionstamp","pack_into_vec_with_versionstamp","pack_into_with_versionstamp","pack_root","pack_root","pack_to_vec","pack_to_vec","pack_to_vec_with_versionstamp","pack_to_vec_with_versionstamp","pack_with_versionstamp","parse_str","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","range","simple","subspace","to_bytes_le","to_fields_le","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_u128_le","transaction_version","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_parse","try_parse_ascii","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unpack","unpack","unpack","unpack","unpack","unpack","unpack","unpack_root","unpack_root","urn","user_version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","expected","found","offset","size","FdbError","HcaError","HighContentionAllocator","InvalidDirectoryLayerMetadata","PackError","PoisonError","RandError","allocate","borrow","borrow","borrow_mut","borrow_mut","fmt","fmt","from","from","from","from","from","from","into","into","new","try_from","try_from","try_into","try_into","try_into_fdb_error","type_id","type_id","vzip","vzip"],"q":[[0,"foundationdb"],[250,"foundationdb::api"],[316,"foundationdb::directory"],[480,"foundationdb::fdb_keys"],[533,"foundationdb::future"],[626,"foundationdb::mapped_key_values"],[688,"foundationdb::options"],[911,"foundationdb::tenant"],[955,"foundationdb::tuple"],[1239,"foundationdb::tuple::PackError"],[1241,"foundationdb::tuple::VersionstampOffset"],[1243,"foundationdb::tuple::hca"],[1275,"core::future::future"],[1276,"core::marker"],[1277,"core::marker"],[1278,"core::convert"],[1279,"core::fmt"],[1280,"core::fmt"],[1281,"core::ops::range"],[1282,"core::ops::range"],[1283,"futures_core::stream"],[1284,"core::option"],[1285,"core::error"],[1286,"alloc::boxed"],[1287,"foundationdb_sys"],[1288,"core::result"],[1289,"core::ops::function"],[1290,"foundationdb_sys"],[1291,"core::ops::function"],[1292,"core::pin"],[1293,"core::ffi::c_str"],[1294,"foundationdb_sys"],[1295,"serde_json::error"],[1296,"serde::ser"],[1297,"num_bigint::bigint"],[1298,"uuid::fmt"],[1299,"uuid::fmt"],[1300,"core::fmt"],[1301,"uuid::error"],[1302,"uuid::timestamp"],[1303,"uuid"],[1304,"uuid"],[1305,"std::io::error"],[1306,"alloc::alloc"],[1307,"rand_core::error"],[1308,"std::sync::poison"]],"d":["A custom error that layer developers can use","Represents a FoundationDB database","","","Contains the error value","","This error represent all errors that can be throwed by …","The Standard Error type of FoundationDB","Alias for <code>Result&lt;..., FdbError&gt;</code>","","","","A <code>KeySelector</code> identifies a particular key in the database.","","Contains the success value","","<code>RangeOption</code> represents a query parameters for range scan …","A reference to the <code>RetryableTransaction</code> has been kept","A retryable transaction, generated by Database.run","A trait that must be implemented to use <code>Database::transact</code> …","A set of options that controls the behavior of …","In FoundationDB, a transaction is a mutable snapshot of a …","A cancelled transaction","A failed to commit transaction.","A committed transaction.","Adds a conflict range to a transaction without performing …","Configuration of foundationDB API and Network","Modify the database snapshot represented by transaction to …","The beginning of the range.","Initialize the FoundationDB Client API, this can only be …","","","","","","","","","","","","","","","","","","","","","","","Cancels the transaction. All pending or future uses of the …","Modify the database snapshot represented by transaction to …","Modify the database snapshot represented by transaction to …","","","","","","","","","","","","Raw foundationdb error code","Attempts to commit the sets and clears previously applied …","Retrieves the database version number at which a given …","Creates a new transaction on the given database.","Create a database for the default configuration path","","","Returns the default Fdb cluster configuration file path","","","Directory provides a tool for managing related subspaces.","","","The end of the range.","Definitions of FDBKeys, used in api version 700 and more.","Creates a <code>KeySelector</code> that picks the first key greater …","Creates a <code>KeySelector</code> that picks the first key greater …","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","Converts from a raw foundationDB error code","Create a database for the given configuration path","Most functions in the FoundationDB API are asynchronous, …","Reads a value from the database snapshot represented by …","Returns a list of public network addresses as strings, one …","Returns an FDBFuture which will be set to the approximate …","Get the estimated byte size of the key range based on the …","Resolves a key selector against the keys in the database …","Mapped Range is an experimental feature introduced in FDB …","Mapped Range is an experimental feature introduced in FDB …","The metadata version key <code>\\\\xff/metadataVersion</code> is a key …","Reads all key-value pairs in the database snapshot …","Gets a list of keys that can split the given range into …","Reads all key-value pairs in the database snapshot …","Reads all key-value pairs in the database snapshot …","The transaction obtains a snapshot read version …","Returns an FDBFuture which will be set to the versionstamp …","An idempotent TransactOption","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Indicates the transaction may have succeeded, though not …","Indicates the operations in the transactions should be …","Indicates the transaction has not committed, though in a …","Returns a the key that serves as the anchor for this …","Creates a <code>KeySelector</code> that picks the last key less than or …","Creates a <code>KeySelector</code> that picks the last key less than …","If non-zero, indicates the maximum number of key-value …","Definitions of MappedKeyValues, used in api version 710 …","","One of the options::StreamingMode values indicating how …","Create a database for the given configuration path if any, …","Constructs a new KeySelector from the given parameters.","Create a database for the given configuration path","create a new custom error","Create a new FDBDatabase from a raw pointer. Users are …","","Returns the key offset parameter for this <code>KeySelector</code>","Implements the recommended retry and backoff behavior for …","Implements the recommended retry and backoff behavior for …","","Generated configuration types for use with the various …","True if this is an <code>or_equal</code> <code>KeySelector</code>","Perform a no-op against FDB to check network thread …","Reset the transaction to its initial state.","Reset the transaction to its initial state.","Reset the transaction to its initial state.","Reset transaction to its initial state.","","Reverses the range direction.","If true, key-value pairs will be returned in reverse …","Runs a transactional function against this Database with …","Modify the database snapshot represented by transaction to …","Called to set an option an on <code>Database</code>.","Called to set an option on an FDBTransaction.","Pass through an option given a code and raw data. Useful …","Sets the snapshot read version used by a transaction.","If non-zero, indicates a (soft) cap on the combined number …","Implementation of the Tenants API. Experimental features …","","","","","","","","","","","<code>transact</code> returns a future which retries on error. It tries …","","","","","","","","","","","","","","","","","","","","","","","","","","","Implementation of the official tuple layer typecodes","","","","","","","","","","","","","","","","","","","","","","","","A watch’s behavior is relative to the transaction that …","A Builder with which different versions of the Fdb C API …","Stop the associated <code>NetworkRunner</code> and thread if dropped","A Builder with which the foundationDB network event loop …","A foundationDB network event loop runner","Allow to stop the associated and running <code>NetworkRunner</code>.","A condition object that can wait for the associated …","Starts the FoundationDB run loop in a dedicated thread. …","","","","","","","","","","","","","Initialize the foundationDB API and returns a …","Finalizes the initialization of the Network and returns a …","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the max api version of the underlying Fdb C API …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Start the foundationDB network event loop in the current …","The version of run-time behavior the API is requested to …","Set network options.","Set the version of run-time behavior the API is requested …","Signals the event loop invoked by <code>Network::run</code> to …","","","","","","","","","","","","","","","","","","","","","","","","","Wait for the associated <code>NetworkRunner</code> to actually run.","the destination directory cannot be a subdirectory of the …","Thrown when the subpath cannot be computed due to length …","cannot get key for the root of a directory partition","cannot modify the root directory","","the destination directory cannot be a subdirectory of the …","the root directory cannot be moved","cannot open subspace in the root of a directory partition","cannot pack for the root of a directory partition","cannot specify a prefix in a partition.","cannot get range for the root of a directory partition","cannot unpack keys using the root of a directory partition","tried to create an already existing path.","<code>Directory</code> represents a subspace of keys in a FoundationDB …","Directory does not exists","The enumeration holding all possible errors from a …","A DirectoryLayer defines a new root directory. The node …","DirectoryOutput represents the different output of a …","A <code>DirectoryPartition</code> is a DirectorySubspace whose prefix …","You can open an <code>DirectoryPartition</code> by using the “…","prefix is already used","A <code>DirectorySubspace</code> represents the contents of a …","Under classic usage, you will obtain an <code>DirectorySubspace</code>","","","the layer is incompatible.","","missing path.","","","Parent does not exists","missing directory.","cannot specify a prefix unless manual prefixes are enabled","Prefix is not empty","Bad directory version.","","","","","","","","","","","","","","","","","","","","","Creates a subdirectory of this Directory located at path …","","","","","Creates or opens the subdirectory of this Directory …","","","","","The default root directory stores directory layer metadata …","","","Checks if the subdirectory of this Directory located at …","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","List the subdirectories of this directory at a given …","","","","","Moves this Directory to the specified newAbsolutePath.","","","","","Moves the subdirectory of this Directory located at …","<code>move_to</code> the directory from old_path to new_path(both …","","","","","","Opens the subdirectory of this Directory located at path.","","","","","","","","","Removes the subdirectory of this Directory located at path …","","","","","Removes the subdirectory of this Directory located at path …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An FdbKey, owned by a FoundationDB Future","An slice of keys owned by a FoundationDB future","An iterator of keyvalues owned by a foundationDB future","A row key you can own","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","retrieves the associated key","","","","","","","","","","","","","","","","","","","","An address owned by a foundationDB future","A slice of addresses owned by a foundationDB future","A keyvalue owned by a foundationDB future","","A slice of bytes owned by a foundationDB future","A keyvalue you can own","An slice of keyvalues owned by a foundationDB future","An iterator of keyvalues owned by a foundationDB future","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","key","","<code>true</code> if there is another range after this one","","","","","","","","","","","","","","","","","","","","","","","","","","","value","","","","","","","","A KeyValue produced by a mapped operation, ownder by a …","An FdbMappedValue that you can own.","An iterator of mapped keyvalues owned by a foundationDB …","An slice of mapped keyvalues owned by a foundationDB …","","","Retrieves the beginning of the range","Retrieves the beginning of the range as a <code>KeySelector</code>","","","","","","","","","","","Retrieves the end of the range","Retrieves the end of the range as a <code>KeySelector</code>","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","retrieves the associated slice of <code>FdbKeyValue</code>","","<code>true</code> if there is another range after this one","","","","","Retrieves the “parent” key that generated the …","Retrieves the “parent” value that generated the …","","","","","","","","","","","","","","","","","","Allows this transaction to read and modify system keys …","addend","value with which to perform bitwise and","value to append to the database value","String identifier used to associated this transaction with …","value with which to perform bitwise and","value with which to perform bitwise or","value with which to perform bitwise xor","","","probability expressed as a percentage between 0 and 100","probability expressed as a percentage between 0 and 100","Allows <code>get</code> operations to read from sections of keyspace …","value to check against database value","value to check against database value","If set, callbacks from external client libraries can be …","","The read version will be committed, and usually will be …","The transaction, if not self-conflicting, may be committed …","Disable client buggify","Enable client buggify - will make requests randomly fail …","probability expressed as a percentage between 0 and 100","probability expressed as a percentage between 0 and 100","Number of client threads to be spawned.  Each cluster will …","path to cluster file","Value to compare with","","","Hexadecimal ID","Optional transaction name","String identifier to be used when tracing or profiling …","Disables logging of client statistics, such as sampled …","Prevents connections through the local client, allowing …","Disables the multi-version client API and instead uses the …","Distributed tracer type. Choose from none, log_file, or …","","Deprecated","","Enables debugging feature to perform run loop profiling. …","Deprecated","","Infrequently used. The client has passed a specific row …","Asks storage servers for how many bytes a clear key range …","path to directory containing client libraries","path to client library","Addresses returned by get_addresses_for_key include the …","This is a write-only transaction which sets the initial …","The default. The client doesn’t know how much of the …","knob_name=knob_value","Infrequently used. Transfer data in batches large enough …","IP:PORT","Max location cache entries","The transaction can read and write to locked databases, …","Enables tracing for this transaction and logs results to …","Hexadecimal ID","value to check against database value","value in milliseconds of maximum delay","Max outstanding watches","Returns <code>true</code> if the error indicates the transaction may …","Infrequently used. Transfer data in batches sized in …","value to check against database value","","","The next write performed on this transaction will not …","value with which to perform bitwise or","Specifies that this transaction should be treated as low …","Specifies that this transaction should be treated as …","Allows this transaction to access the raw key-space when …","Used to add a read conflict range","Deprecated","The transaction can read from locked databases.","Allows this transaction to read system keys (those that …","Reads performed by a transaction will not see any prior …","The transaction can retrieve keys that are conflicting …","number of times to retry","Returns <code>true</code> if the error indicates the operations in the …","Returns <code>true</code> if the error indicates the transaction has …","Transfer data in batches large enough that an individual …","Sets an identifier for server tracing of this transaction. …","value to which to set the transformed key","value to versionstamp and set","value in bytes","Infrequently used. Transfer data in batches small enough …","Snapshot read operations will not see the results of …","Snapshot read operations will not see the results of …","Snapshot read operations will see the results of writes …","Snapshot read operations will see the results of writes …","A byte string of length 16 used to associate the span of …","By default, users are not allowed to write to special …","By default, the special key space will only allow users to …","","ca bundle","file path","certificates","file path","key","file path","key passphrase","file path or linker-resolved name","verification pattern","String identifier used to associated this transaction with …","An integer between 0 and 100 (default is 0) expressing the …","value in milliseconds of timeout","Trace clock source","path to output directory (or NULL for current working …","The identifier that will be part of all trace file names","Format of trace files","value of the LogGroup attribute","max total size of trace files","Append this suffix to partially written log files. When a …","max size of a single trace output file","Allows <code>get</code> operations to read from sections of keyspace …","The read version will be committed, and usually will be …","Deprecated. Addresses returned by get_addresses_for_key …","String identifier to be used in the logs when tracing this …","Maximum length of escaped key and value fields.","Maximum length of escaped key and value fields.","value in milliseconds of maximum delay","","number of times to retry","value in bytes","value in milliseconds of timeout","Use configuration database.","Allows this transaction to use cached GRV from the …","This option should only be used by tools which change the …","By default, operations that are performed on a transaction …","Client intends to consume the entire range and would like …","Used to add a write conflict range","value with which to perform bitwise xor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A <code>FdbTenant</code> represents a named key-space within a database …","Holds the information about a tenant","The FoundationDB API includes function to manage the set …","","","","","","","Creates a new tenant in the cluster using a transaction …","Creates a new transaction on the given database and tenant.","Deletes a tenant from the cluster using a transaction …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the name of this <code>FdbTenant</code>.","Get a tenant in the cluster using a transaction created on …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Lists all tenants in between the range specified. The …","","","Runs a transactional function against this Tenant with …","","<code>transact</code> returns a future which retries on error. It tries …","","","","","","","","","","","","","","","","","","","","Represent a sequence of bytes (i.e. &amp;u8)","","","","Contains the error value","","","","","","","UUID namespace for Domain Name System (DNS).","UUID namespace for ISO Object Identifiers (OIDs).","UUID namespace for Uniform Resource Locators (URLs).","UUID namespace for X.500 Distinguished Names (DNs).","","","Contains the success value","","A packing/unpacking error","Alias for <code>Result&lt;..., tuple::Error&gt;</code>","","Represents a well-defined region of keyspace in a …","","","Tracks the depth of a Tuple decoding chain","A type that can be packed","A type that can be unpacked","","A Universally Unique Identifier (UUID).","","","","","","","<code>all</code> returns the Subspace corresponding to all keys in a …","","","Get a borrowed <code>Braced</code> formatter.","Returns a slice of 16 octets containing the value.","","","","","Returns the four field values of the UUID.","Get a borrowed <code>Hyphenated</code> formatter.","","","","Get a borrowed <code>Simple</code> formatter.","","","Returns a 128bit value containing the value.","Returns two 64bit values containing the value.","Get a borrowed <code>Urn</code> formatter.","","","","","","","","","","","","","","","","","","","Get a <code>Braced</code> formatter.","<code>bytes</code> returns the literal bytes of the prefix of this …","","","","","","","","","","","","","","","","","","","","","","","Returns the current depth in any recursive tuple …","","A buffer that can be used for <code>encode_...</code> calls, that is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","Creates a UUID using the supplied bytes.","Returns a new Subspace from the provided bytes.","Creates a UUID using the supplied bytes in little endian …","Creates a reference to a UUID from a reference to the …","Creates a UUID from four field values.","Creates a UUID from four field values in little-endian …","Creates a UUID using the supplied bytes.","Creates a UUID using the supplied bytes in little endian …","","Creates a UUID from a 128bit value.","Creates a UUID from a 128bit value in little-endian order.","Creates a UUID from two 64bit values.","If the UUID is the correct version (v1, v6, or v7) this …","Returns the variant of the UUID structure.","Returns the version of the UUID.","Returns the version number of the UUID.","","","","","","The directory layer offers subspace indirection, where …","Get a <code>Hyphenated</code> formatter.","","Increment the depth by one, this be called when calling …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes self and returns the underlying byte value of the …","Convert into prefix key bytes","","","","Tests if the UUID is max (all ones).","Tests if the UUID is nil (all zeros).","<code>is_start_of</code> returns true if the provided key starts with …","The ‘max UUID’ (all ones).","Creates a random UUID.","The ‘nil UUID’ (all zeros).","Pack value and returns the packed buffer","","","","Returns the key encoding the specified Tuple with the …","","","Pack value into the given buffer","Pack value into the given buffer","Pack value into the given buffer","Pack value into the given buffer","Pack value into the given buffer","Pack value into the given buffer","","","Pack value and returns the packed buffer","Pack value and returns the packed buffer","Pack value and returns the packed buffer","Pack value and returns the packed buffer","Pack value and returns the packed buffer","Parses a <code>Uuid</code> from a string of hexadecimal digits with …","","","","","","<code>range</code> returns first and last key of given Subspace","Get a <code>Simple</code> formatter.","Returns a new Subspace whose prefix extends this Subspace …","Returns the bytes of the UUID in little-endian order.","Returns the four field values of the UUID in little-endian …","","","","","","","","","","","Returns a 128bit little-endian value containing the value.","","","","","","","","","","","","","","","","","","","","Parses a <code>Uuid</code> from a string of hexadecimal digits with …","Parses a <code>Uuid</code> from a string of hexadecimal digits with …","","","","","","","","","Unpack input","","","","<code>unpack</code> returns the Tuple encoded by the given key with the …","","","","","Get a <code>Urn</code> formatter.","","","","","","","","","","","","","","","","Represents a High Contention Allocator for a given subspace","","","","","Returns a byte string that","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Constructs an allocator that will use the input subspace …","","","","","","","","",""],"i":[28,0,0,28,6,53,0,0,0,53,28,53,0,28,6,28,0,28,0,0,0,0,0,0,0,1,0,1,14,0,23,28,25,11,12,13,21,9,1,14,15,23,28,25,11,12,13,21,9,1,14,15,1,1,1,1,11,12,13,14,15,11,12,13,14,15,12,1,21,23,23,11,14,0,25,15,0,23,1,14,0,13,13,28,28,25,25,12,12,13,21,9,1,14,23,28,28,28,28,25,11,12,12,13,21,9,1,1,1,14,14,14,14,14,14,14,14,14,14,15,12,23,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,11,23,28,25,11,12,13,21,9,1,14,15,11,12,12,12,13,13,13,14,0,12,14,23,13,23,28,23,14,13,25,1,23,0,13,23,25,21,9,1,11,14,14,23,1,23,1,1,1,14,0,11,11,12,13,14,15,28,25,12,53,23,23,23,23,28,25,11,12,13,21,9,1,14,15,23,28,25,11,12,13,21,9,1,14,15,132,12,0,23,28,25,11,12,13,21,9,1,14,15,1,23,28,25,11,12,13,21,9,1,14,15,1,0,0,0,0,0,0,56,57,56,58,59,61,8,57,56,58,59,61,8,57,56,57,8,57,56,58,59,61,8,0,57,56,58,59,61,8,58,57,56,57,61,57,56,58,59,61,8,57,56,58,59,61,8,57,56,58,59,61,8,57,56,58,59,61,8,59,32,32,32,32,32,32,32,32,32,32,32,32,32,0,32,0,0,0,0,63,32,0,63,32,32,32,32,32,32,32,32,32,32,32,32,64,65,62,32,63,64,65,62,32,63,62,63,64,65,62,63,64,65,62,63,133,64,65,62,63,133,64,65,62,63,64,64,65,133,64,65,62,63,64,65,62,32,63,64,65,62,32,32,32,32,63,65,62,63,64,65,62,63,64,65,62,32,63,62,133,64,65,62,63,133,64,65,62,63,133,64,65,62,63,64,62,133,64,65,62,63,62,63,62,63,133,64,65,62,63,133,64,65,62,63,62,62,63,64,65,62,63,64,65,62,32,63,64,65,62,32,63,64,65,62,32,63,62,63,64,65,62,32,63,0,0,0,0,71,73,71,74,73,72,71,74,73,72,71,73,73,72,73,72,73,72,71,74,73,72,71,74,73,72,71,71,74,72,74,74,74,71,74,73,72,71,74,73,72,71,74,73,72,71,74,73,72,0,0,0,0,0,0,0,0,0,75,76,77,45,80,75,76,77,45,81,80,79,75,76,77,45,81,80,79,75,76,77,45,80,80,79,80,79,80,79,75,76,77,45,81,80,79,75,76,77,45,81,80,79,45,45,81,79,81,45,81,81,81,81,81,75,76,77,45,81,80,79,75,76,77,45,81,80,79,75,76,77,45,81,80,79,79,75,76,77,45,81,80,79,0,0,0,0,82,84,83,83,82,83,84,85,82,83,84,85,82,84,83,83,83,84,83,84,83,82,83,84,85,82,83,84,85,82,82,85,83,85,82,85,85,85,85,83,83,85,82,83,84,85,82,83,84,85,82,83,84,85,82,83,84,85,50,7,7,7,50,7,7,7,60,60,60,60,50,7,7,60,50,50,50,60,60,60,60,60,60,7,0,0,49,50,50,60,60,60,60,50,50,50,60,60,0,87,50,60,60,50,50,87,60,87,60,49,50,50,49,7,50,49,88,87,7,0,0,50,7,50,50,50,4,50,50,50,50,50,50,88,88,87,50,7,7,50,87,49,50,49,50,50,50,50,0,60,60,60,60,60,60,60,60,60,50,49,50,60,60,60,60,60,60,60,60,49,49,49,50,49,50,49,0,49,49,49,49,50,50,50,87,4,7,60,49,50,60,49,50,87,7,4,88,60,49,50,87,7,4,88,60,49,50,87,7,4,88,60,49,50,87,7,4,88,60,49,50,87,7,4,88,60,49,50,87,7,4,88,60,49,50,87,7,4,88,60,49,50,87,7,4,88,60,49,50,87,7,4,88,60,49,50,87,7,4,88,60,49,50,87,7,4,88,60,49,50,87,7,4,88,60,49,50,87,7,4,88,0,0,0,46,95,97,46,95,97,97,46,97,95,46,95,97,46,95,97,46,97,95,46,95,97,97,95,95,46,95,46,46,95,95,97,46,95,97,46,95,97,46,95,97,67,67,67,67,102,102,0,102,102,0,69,102,102,67,67,67,100,104,104,104,104,102,100,69,100,0,0,102,0,67,102,0,0,0,67,0,102,0,102,0,100,100,10,102,102,104,104,102,108,102,102,104,104,102,104,107,104,102,102,104,104,104,102,102,104,102,100,10,108,117,67,107,104,102,100,10,108,117,67,107,104,10,104,102,100,10,108,117,107,104,102,100,10,108,117,107,104,102,100,108,107,108,102,104,117,107,104,104,102,100,10,108,107,104,102,100,10,108,107,104,104,104,104,102,100,10,108,67,67,107,107,104,104,104,104,104,102,100,10,10,108,108,117,67,67,107,107,107,107,107,104,10,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,100,10,108,107,0,104,108,117,104,102,100,10,108,117,67,107,104,10,102,107,108,104,104,10,104,104,104,0,68,104,102,10,108,107,0,68,68,68,68,0,68,68,68,68,68,68,0,104,104,102,100,108,107,10,104,10,104,104,104,102,100,10,108,117,107,104,67,107,104,108,104,104,104,102,100,10,108,117,67,107,104,102,100,10,108,117,67,107,104,104,104,102,100,10,108,117,67,107,0,70,104,102,10,108,107,70,70,104,108,104,102,100,10,108,117,67,107,134,134,135,136,31,0,0,31,31,31,31,129,31,129,31,129,31,129,31,31,31,31,31,129,31,129,129,31,129,31,129,31,31,129,31,129],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,[3,[2]],[3,[2]],4],[[6,[5]]]],0,[[1,[3,[2]],[3,[2]],7],5],0,[[],8],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,9],[[1,[3,[2]]],5],[[1,[3,[2]],[3,[2]]],5],[[1,10],5],[11,11],[12,12],[13,13],[14,14],[15,15],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[12,16],[1,[[0,[17,18,19,20]]]],[21,[[6,[22]]]],[23,[[6,[1]]]],[[],[[6,[23]]]],[[],11],[[],14],[[],24],[25,12],[15,1],0,[23,5],[1,5],0,0,[-1,13,[[27,[[26,[[3,[2]]]]]]]],[-1,13,[[27,[[26,[[3,[2]]]]]]]],[[28,29],30],[[28,29],30],[[25,29],30],[[25,29],30],[[12,29],30],[[12,29],30],[[13,29],30],[[21,29],30],[[9,29],30],[[1,29],30],[[14,29],30],[-1,-1,[]],[31,28],[12,28],[-1,-1,[]],[32,28],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[25,12],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[9,1],[21,1],[[[5,[[3,[2]],[3,[2]]]]],14],[[[5,[13,13]]],14],[-1,-1,[]],[[[34,[[33,[2]]]]],14],[[[5,[[33,[2]],[33,[2]]]]],14],[[[35,[[33,[2]]]]],14],[[[35,[13]]],14],[10,14],[[[34,[[3,[2]]]]],14],[[[35,[[3,[2]]]]],14],[-1,-1,[]],[36,12],[24,[[6,[23]]]],0,[[1,[3,[2]],37],[[0,[17,18,19,20]]]],[[1,[3,[2]]],[[0,[17,18,19,20]]]],[1,[[0,[17,18,19,20]]]],[[1,[3,[2]],[3,[2]]],[[0,[17,18,19,20]]]],[[1,13,37],[[0,[17,18,19,20]]]],[[1,14,[3,[2]],38,37],[[0,[17,18,19,20]]]],[[1,14,[3,[2]],37],[[0,[39,18,19,20]]]],[[1,37],[[6,[[40,[22]]]]]],[[1,14,38,37],[[0,[17,18,19,20]]]],[[1,[3,[2]],[3,[2]],22],[[0,[17,18,19,20]]]],[[1,14,37],[[0,[39,18,19,20]]]],[[1,14,37],[[0,[39,20]]]],[1,[[0,[17,18,19,20]]]],[1,[[0,[17,18,19,20]]]],[[],11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[12,37],[12,37],[12,37],[13,[[3,[2]]]],[-1,13,[[27,[[26,[[3,[2]]]]]]]],[-1,13,[[27,[[26,[[3,[2]]]]]]]],0,0,[12,24],0,[[[40,[24]]],[[6,[23]]]],[[[26,[[3,[2]]]],37,16],13],[[[40,[24]]],[[6,[23]]]],[[[42,[41]]],28],[[[44,[43]]],23],[[14,45],[[40,[14]]]],[13,16],[25,[[0,[17]]]],[[1,12],[[0,[17,18,19,20]]]],[[23,[3,[2]]],[[6,[46]]]],0,[13,37],[23,[[6,[5]]]],[25,1],[21,1],[9,1],[1,5],0,[14,14],0,[[23,-1],[[47,[-2,28]]],48,[]],[[1,[3,[2]],[3,[2]]],5],[[23,49],[[6,[5]]]],[[1,50],[[6,[5]]]],[[1,51,[40,[[33,[2]]]]],[[6,[5]]]],[[1,22],5],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,52,[]],[-1,52,[]],[-1,52,[]],[[-1,1],[],[]],[[23,-1,11],47,53],[[23,-1,-2,11],[[0,[17,18]]],18,[54,18]],[[23,-1,-2,11],[[0,[17]]],[],54],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[12,-1]]],[]],[12,[[47,[12,12]]]],0,[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[1,5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[1,[3,[2]]],[[0,[17,18,19,20]]]],0,0,0,0,0,0,[56,[[6,[8]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[57,[[6,[56]]]],[56,[[6,[[5,[58,59]]]]]],[[],57],[8,5],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],16],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[58,[[6,[5]]]],[57,16],[[56,60],[[6,[56]]]],[[57,16],57],[61,[[6,[5]]]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[59,61],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[62,[[3,[2]]]],[63,[[47,[[3,[2]],32]]]],[64,64],[65,65],[62,62],[63,63],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,1,[3,[52]],[40,[[3,[2]]]],[40,[[3,[2]]]]],[[66,[[42,[17]]]]],[]],[[64,1,[3,[52]],[40,[[3,[2]]]],[40,[[3,[2]]]]],[[66,[[42,[17]]]]]],[[65,1,[3,[52]],[40,[[3,[2]]]],[40,[[3,[2]]]]],[[66,[[42,[17]]]]]],[[62,1,[3,[52]],[40,[[3,[2]]]],[40,[[3,[2]]]]],[[66,[[42,[17]]]]]],[[63,1,[3,[52]],[40,[[3,[2]]]],[40,[[3,[2]]]]],[[66,[[42,[17]]]]]],[[-1,1,[3,[52]],[40,[[3,[2]]]],[40,[[3,[2]]]]],[[66,[[42,[17]]]]],[]],[[64,1,[3,[52]],[40,[[3,[2]]]],[40,[[3,[2]]]]],[[66,[[42,[17]]]]]],[[65,1,[3,[52]],[40,[[3,[2]]]],[40,[[3,[2]]]]],[[66,[[42,[17]]]]]],[[62,1,[3,[52]],[40,[[3,[2]]]],[40,[[3,[2]]]]],[[66,[[42,[17]]]]]],[[63,1,[3,[52]],[40,[[3,[2]]]],[40,[[3,[2]]]]],[[66,[[42,[17]]]]]],[[],64],[64],[65],[[-1,1,[3,[52]]],[[66,[[42,[17]]]]],[]],[[64,1,[3,[52]]],[[66,[[42,[17]]]]]],[[65,1,[3,[52]]],[[66,[[42,[17]]]]]],[[62,1,[3,[52]]],[[66,[[42,[17]]]]]],[[63,1,[3,[52]]],[[66,[[42,[17]]]]]],[[64,29],30],[[65,29],30],[[62,29],30],[[32,29],30],[[63,29],30],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[31,32],[67,32],[-1,-1,[]],[12,32],[-1,-1,[]],[65,[[3,[2]]]],[62,[[3,[2]]]],[63,[[3,[2]]]],[64,[[3,[52]]]],[65,[[3,[52]]]],[62,[[3,[52]]]],[63,[[3,[52]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[62,[3,[2]]],37],[[-1,1,[3,[52]]],[[66,[[42,[17]]]]],[]],[[64,1,[3,[52]]],[[66,[[42,[17]]]]]],[[65,1,[3,[52]]],[[66,[[42,[17]]]]]],[[62,1,[3,[52]]],[[66,[[42,[17]]]]]],[[63,1,[3,[52]]],[[66,[[42,[17]]]]]],[[-1,1,[3,[52]]],[[66,[[42,[17]]]]],[]],[[64,1,[3,[52]]],[[66,[[42,[17]]]]]],[[65,1,[3,[52]]],[[66,[[42,[17]]]]]],[[62,1,[3,[52]]],[[66,[[42,[17]]]]]],[[63,1,[3,[52]]],[[66,[[42,[17]]]]]],[[-1,1,[3,[52]],[3,[52]]],[[66,[[42,[17]]]]],[]],[[64,1,[3,[52]],[3,[52]]],[[66,[[42,[17]]]]]],[[65,1,[3,[52]],[3,[52]]],[[66,[[42,[17]]]]]],[[62,1,[3,[52]],[3,[52]]],[[66,[[42,[17]]]]]],[[63,1,[3,[52]],[3,[52]]],[[66,[[42,[17]]]]]],[[10,10,37],64],[[[3,[52]],[33,[2]],64,[33,[2]]],62],[[-1,1,[3,[52]],[40,[[3,[2]]]]],[[66,[[42,[17]]]]],[]],[[64,1,[3,[52]],[40,[[3,[2]]]]],[[66,[[42,[17]]]]]],[[65,1,[3,[52]],[40,[[3,[2]]]]],[[66,[[42,[17]]]]]],[[62,1,[3,[52]],[40,[[3,[2]]]]],[[66,[[42,[17]]]]]],[[63,1,[3,[52]],[40,[[3,[2]]]]],[[66,[[42,[17]]]]]],[[62,-1],[[33,[2]]],68],[[63,-1],[[47,[[33,[2]],32]]],68],[62,[[5,[[33,[2]],[33,[2]]]]]],[63,[[47,[[5,[[33,[2]],[33,[2]]]],32]]]],[[-1,1,[3,[52]]],[[66,[[42,[17]]]]],[]],[[64,1,[3,[52]]],[[66,[[42,[17]]]]]],[[65,1,[3,[52]]],[[66,[[42,[17]]]]]],[[62,1,[3,[52]]],[[66,[[42,[17]]]]]],[[63,1,[3,[52]]],[[66,[[42,[17]]]]]],[[-1,1,[3,[52]]],[[66,[[42,[17]]]]],[]],[[64,1,[3,[52]]],[[66,[[42,[17]]]]]],[[65,1,[3,[52]]],[[66,[[42,[17]]]]]],[[62,1,[3,[52]]],[[66,[[42,[17]]]]]],[[63,1,[3,[52]]],[[66,[[42,[17]]]]]],[[62,[33,[52]]],5],[[62,-1],10,68],[[63,-1],[[47,[10,32]]],68],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[[62,[3,[2]]],[[69,[-1]]],70],[[63,[3,[2]]],[[47,[[69,[-1]],32]]],70],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[71,[[3,[72]]]],[73,72],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[71],[73],[[73,73],37],[[72,72],37],[[-1,-2],37,[],[]],[[-1,-2],37,[],[]],[[73,29],30],[[72,29],30],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[71],[71],[-1,-2,[],[]],[72,[[3,[2]]]],[74,40],[[74,38],40],[74,[[5,[38,[40,[38]]]]]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,[75,[[3,[2]]]],[76,[[3,[77]]]],[77,78],[45,[[3,[79]]]],[80,79],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[75],[76],[77,78],[45],[80],[[80,80],37],[[79,79],37],[[-1,-2],37,[],[]],[[-1,-2],37,[],[]],[[80,29],30],[[79,29],30],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[45],[45],[-1,-2,[],[]],[79,[[3,[2]]]],[81,38],[45,37],[81,40],[81,40],[[81,38],40],[[81,38],40],[81,[[5,[38,[40,[38]]]]]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[79,[[3,[2]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[82,[[3,[83]]]],[84,83],[83,[[3,[2]]]],[83,13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[82],[84],[83,[[3,[2]]]],[83,13],[[83,83],37],[[84,84],37],[[-1,-2],37,[],[]],[[-1,-2],37,[],[]],[[83,29],30],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[82],[82],[-1,-2,[],[]],[83,[[3,[79]]]],[85,38],[82,37],[85,40],[85,40],[[85,38],40],[[85,38],40],[83,[[3,[2]]]],[83,[[3,[2]]]],[85,[[5,[38,[40,[38]]]]]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[60,[[6,[5]]]],[[49,43],[[6,[5]]]],[[50,86],[[6,[5]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[60,60],[49,49],[50,50],[87,87],[7,7],[4,4],[88,88],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[60,89],[49,90],[50,51],[87,91],[7,92],[4,93],[88,94],[[60,29],30],[[49,29],30],[[50,29],30],[[87,29],30],[[7,29],30],[[4,29],30],[[88,29],30],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[23,[3,[2]]],[[47,[5,12]]]],[46,[[6,[1]]]],[[23,[3,[2]]],[[47,[5,12]]]],[-1,[[47,[95]]],96],[46,5],[[95,29],30],[[97,29],30],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[46,[[3,[2]]]],[[23,[3,[2]]],[[47,[[40,[[47,[95,98]]]],12]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[23,[3,[2]],[3,[2]],[40,[38]]],[[47,[[33,[[47,[95,98]]]],12]]]],0,0,[[46,-1],[[47,[-2,28]]],48,[]],[[95,-1],47,99],[[46,-1,11],47,53],[-1,[[47,[-2]]],[],[]],[[[5,[[3,[2]],[3,[2]]]]],[[47,[95]]]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[100,100],5],[[100,101],5],[[],10],[102,[[40,[103]]]],[102,[[40,[37]]]],[104,105],[104,[[106,[2]]]],[102,[[40,[107]]]],[108,[[106,[2]]]],[102,[[40,[109]]]],[102,[[40,[110]]]],[104,[[5,[101,111,111,[106,[2]]]]]],[104,112],[102,[[40,[22]]]],[104,[[3,[2]]]],[107,[[3,[2]]]],[104,113],[102,[[40,[24]]]],[102,[[40,[[3,[102]]]]]],[104,114],[104,[[5,[115,115]]]],[104,116],[102,[[40,[104]]]],[102,[[40,[108]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[104,105],[10,[[3,[2]]]],[104,104],[102,102],[100,100],[10,10],[108,108],[117,117],[107,107],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[104,104],118],[[102,102],118],[[100,100],118],[[108,108],118],[[107,107],118],[[[106,[2]],111],108],[102,38],[[],104],[117,38],[107],[[],[[106,[2]]]],[[104,104],37],[[102,102],37],[[100,100],37],[[10,10],37],[[108,108],37],[[107,107],37],[[-1,-2],37,[],[]],[[-1,-2],37,[],[]],[[-1,-2],37,[],[]],[[-1,-2],37,[],[]],[[-1,-2],37,[],[]],[[-1,-2],37,[],[]],[[104,29],[[47,[5,119]]]],[[104,29],[[47,[5,119]]]],[[104,29],[[47,[5,119]]]],[[104,29],[[47,[5,119]]]],[[102,29],30],[[100,29],30],[[10,29],30],[[108,29],30],[[67,29],30],[[67,29],30],[[107,29],30],[[107,29],30],[105,104],[112,104],[113,104],[116,104],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,10,68],[[[106,[2]]],108],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[120,67],[52,107],[[[33,[2]]],107],[-1,-1,[]],[[[3,[2]]],107],[24,107],[[[106,[2]]],104],[-1,10,[[27,[[33,[2]]]]]],[[[106,[2]]],104],[[[106,[2]]],104],[[101,111,111,[106,[2]]],104],[[101,111,111,[106,[2]]],104],[[[3,[2]]],[[47,[104,121]]]],[[[3,[2]]],[[47,[104,121]]]],[24,[[47,[104]]]],[114,104],[114,104],[[115,115],104],[104,[[40,[122]]]],[104,123],[104,[[40,[124]]]],[104,38],[[104,-1],5,125],[[100,-1],5,125],[[10,-1],5,125],[[108,-1],5,125],[[107,-1],5,125],0,[104,112],[111,108],[117,117],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[104,[[106,[2]]]],[10,[[33,[2]]]],[102,102],[107,[[33,[2]]]],[108,37],[104,37],[104,37],[[10,[3,[2]]],37],[[],104],[[],104],[[],104],[-1,[[33,[2]]],68],[[-1,-2,117],[[126,[100]]],[],127],[[104,-1,117],[[126,[100]]],127],[[102,-1,117],[[126,[100]]],127],[[10,-1],[[33,[2]]],68],[[108,-1,117],[[126,[100]]],127],[[107,-1,117],[[126,[100]]],127],[[-1,[33,[2]]],5,68],[[-1,[33,[2]]],5,[]],[[-1,[33,[2]]],5,[]],[[-1,[33,[2]]],100,[]],[[-1,[33,[2]]],100,[]],[[-1,[33,[2]]],5,68],[[-1,-2],[[126,[100]]],[],127],[[-1,-2],[[126,[100]]],[],127],[-1,[[33,[2]]],[]],[-1,[[33,[2]]],[]],[-1,[[33,[2]]],[]],[-1,[[33,[2]]],[]],[-1,[[33,[2]]],68],[24,[[47,[104,121]]]],[[104,104],[[40,[118]]]],[[102,102],[[40,[118]]]],[[100,100],[[40,[118]]]],[[108,108],[[40,[118]]]],[[107,107],[[40,[118]]]],[10,[[5,[[33,[2]],[33,[2]]]]]],[104,113],[[10,-1],10,68],[104,[[106,[2]]]],[104,[[5,[101,111,111,[106,[2]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,52,[]],[-1,52,[]],[-1,52,[]],[104,114],[108,[[3,[2]]]],[24,[[47,[104]]]],[[[33,[2,128]]],[[47,[104]]]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[24,[[47,[104,121]]]],[[[3,[2]]],[[47,[104,121]]]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[-1,55,[]],[[[3,[2]]],[[69,[-1]]],70],[[[3,[2]],117],[[69,[[5,[[3,[2]],-1]]]]],[]],[[[3,[2]],117],[[69,[[5,[[3,[2]],104]]]]]],[[[3,[2]],117],[[69,[[5,[[3,[2]],102]]]]]],[[10,[3,[2]]],[[69,[-1]]],70],[[[3,[2]],117],[[69,[[5,[[3,[2]],108]]]]]],[[[3,[2]],117],[[69,[[5,[[3,[2]],107]]]]]],[[[3,[2]]],[[69,[-1]]],[]],[[[3,[2]]],[[69,[-1]]],[]],[104,116],[108,111],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,[[129,1],[[47,[22,31]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[31,29],30],[[129,29],30],[130,31],[12,31],[[[131,[-1]]],31,[]],[67,31],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[10,129],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[-1,[[47,[-2]]],[],[]],[31,[[47,[12,31]]]],[-1,55,[]],[-1,55,[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[3,"Transaction",0],[15,"u8"],[15,"slice"],[4,"ConflictRangeType",688],[15,"tuple"],[6,"FdbResult",0],[4,"MutationType",688],[3,"NetworkAutoStop",250],[3,"TransactionCancelled",0],[3,"Subspace",955],[3,"TransactOption",0],[3,"FdbError",0],[3,"KeySelector",0],[3,"RangeOption",0],[3,"RetryableTransaction",0],[15,"i32"],[8,"Future",1275],[8,"Send",1276],[8,"Sync",1276],[8,"Unpin",1276],[3,"TransactionCommitted",0],[15,"i64"],[3,"Database",0],[15,"str"],[3,"TransactionCommitError",0],[4,"Cow",1277],[8,"Into",1278],[4,"FdbBindingError",0],[3,"Formatter",1279],[6,"Result",1279],[4,"HcaError",1243],[4,"DirectoryError",316],[3,"Vec",1280],[3,"RangeInclusive",1281],[3,"Range",1281],[6,"fdb_error_t",1282],[15,"bool"],[15,"usize"],[8,"Stream",1283],[4,"Option",1284],[8,"Error",1285],[3,"Box",1286],[6,"FDBDatabase",1282],[3,"NonNull",1287],[3,"FdbValues",533],[3,"FdbTenant",911],[4,"Result",1288],[8,"Fn",1289],[4,"DatabaseOption",688],[4,"TransactionOption",688],[6,"FDBTransactionOption",1282],[3,"String",1290],[8,"DatabaseTransact",0],[8,"FnMut",1289],[3,"TypeId",1291],[3,"NetworkBuilder",250],[3,"FdbApiBuilder",250],[3,"NetworkRunner",250],[3,"NetworkWait",250],[4,"NetworkOption",688],[3,"NetworkStop",250],[3,"DirectorySubspace",316],[4,"DirectoryOutput",316],[3,"DirectoryLayer",316],[3,"DirectoryPartition",316],[3,"Pin",1292],[4,"PackError",955],[8,"TuplePack",955],[6,"PackResult",955],[8,"TupleUnpack",955],[3,"FdbKeys",480],[3,"FdbKey",480],[3,"FdbRowKey",480],[3,"FdbKeysIter",480],[3,"FdbSlice",533],[3,"FdbAddresses",533],[3,"FdbAddress",533],[3,"CStr",1293],[3,"FdbKeyValue",533],[3,"FdbValue",533],[3,"FdbValuesIter",533],[3,"MappedKeyValues",626],[3,"FdbMappedKeyValue",626],[3,"FdbMappedValue",626],[3,"FdbMappedValuesIter",626],[6,"FDBTransaction",1282],[4,"StreamingMode",688],[4,"ErrorPredicate",688],[6,"FDBNetworkOption",1282],[6,"FDBDatabaseOption",1282],[6,"FDBStreamingMode",1282],[6,"FDBMutationType",1282],[6,"FDBConflictRangeType",1282],[6,"FDBErrorPredicate",1282],[3,"TenantInfo",911],[8,"Deserializer",1294],[3,"TenantManagement",911],[3,"Error",1295],[8,"Serializer",1296],[4,"VersionstampOffset",955],[15,"u32"],[4,"Element",955],[3,"BigInt",1297],[3,"Uuid",955],[3,"Braced",1298],[15,"array"],[3,"Bytes",955],[3,"Versionstamp",955],[15,"f32"],[15,"f64"],[15,"u16"],[3,"Hyphenated",1298],[3,"Simple",1298],[15,"u128"],[15,"u64"],[3,"Urn",1298],[3,"TupleDepth",955],[4,"Ordering",1299],[3,"Error",1279],[3,"Error",1300],[3,"Error",1301],[3,"Timestamp",1302],[4,"Variant",1303],[4,"Version",1303],[8,"Hasher",1304],[6,"Result",1300],[8,"Write",1305],[3,"Global",1306],[3,"HighContentionAllocator",1243],[3,"Error",1307],[3,"PoisonError",1308],[8,"TransactError",0],[8,"Directory",316],[13,"BadCode",1239],[13,"OneIncomplete",1241],[13,"None",1241]]},\
"foundationdb_bench":{"doc":"","t":"DLLLLLLLLLLLLLLLLLLLLLLLL","n":["Stopwatch","borrow","borrow_mut","clone","clone_into","default","elapsed","elapsed_ms","elapsed_split","elapsed_split_ms","fmt","from","into","is_running","new","reset","restart","start","start_new","stop","to_owned","to_string","try_from","try_into","type_id"],"q":[[0,"foundationdb_bench"],[25,"core::time"],[26,"core::fmt"],[27,"core::fmt"],[28,"core::result"],[29,"core::any"]],"d":["","","","","","","Returns the elapsed time since the start of the stopwatch.","Returns the elapsed time since the start of the stopwatch …","Returns the elapsed time since last split or start/restart.","Returns the elapsed time since last split or start/restart …","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Returns whether the stopwatch is running.","Returns a new stopwatch.","Resets all counters and stops the stopwatch.","Resets and starts the stopwatch again.","Starts the stopwatch.","Returns a new stopwatch which will immediately be started.","Stops the stopwatch.","","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[0,[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[[-1,-2],2,[],[]],[[],1],[1,3],[1,4],[1,3],[1,4],[[1,5],6],[-1,-1,[]],[-1,-2,[],[]],[1,7],[[],1],[1,2],[1,2],[1,2],[[],1],[1,2],[-1,-2,[],[]],[-1,8,[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,10,[]]],"c":[],"p":[[3,"Stopwatch",0],[15,"tuple"],[3,"Duration",25],[15,"i64"],[3,"Formatter",26],[6,"Result",26],[15,"bool"],[3,"String",27],[4,"Result",28],[3,"TypeId",29]]},\
"foundationdb_gen":{"doc":"","t":"F","n":["emit"],"q":[[0,"foundationdb_gen"],[1,"core::fmt"],[2,"core::fmt"]],"d":[""],"i":[0],"f":[[-1,1,2]],"c":[],"p":[[6,"Result",1],[8,"Write",1]]},\
"foundationdb_macros":{"doc":"Macro definitions used to maintain the crate","t":"XX","n":["cfg_api_versions","simulation_entrypoint"],"q":[[0,"foundationdb_macros"]],"d":["Allow to compute the range of supported api versions for a …",""],"i":[0,0],"f":[0,0],"c":[],"p":[]},\
"foundationdb_options_gen":{"doc":"","t":"F","n":["main"],"q":[[0,"foundationdb_options_gen"]],"d":[""],"i":[0],"f":[[[],1]],"c":[],"p":[[15,"tuple"]]},\
"foundationdb_simulation":{"doc":"FoundationDB-workload module","t":"FNGNNDDIEGNNGDMLLLLLLLLLKLLLLKOLFMLLLLKKLLLLLLMLLLLKLKLLLLLLLLLLLLLLLMLLLL","n":["CPPWorkloadFactory","Debug","Details","Error","Info","Metric","Promise","RustWorkload","Severity","SimDatabase","Warn","WarnAlways","Workload","WorkloadContext","averaged","avg","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check","client_count","client_id","clone","clone_into","description","details","drop","fdb_spawn","format_code","from","from","from","from","get_check_timeout","get_metrics","get_option","get_process_id","into","into","into","into","name","now","rnd","send","set_process_id","setup","shared_random_number","start","to_owned","trace","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","val","value","vzip","vzip","vzip","vzip"],"q":[[0,"foundationdb_simulation"],[74,"alloc::string"],[75,"core::convert"],[76,"core::convert"],[77,"alloc::vec"],[78,"core::option"],[79,"core::str::traits"],[80,"core::result"],[81,"core::any"]],"d":["Redirect FoundationDB call to symbol “workloadFactory” …","debug","A vector of key value string pairs to pass to …","error, this severity automatically breaks execution","info","A single metric entry","A wrapper around a FoundationDB promise","RustWorkload trait provides a one to one equivalent to the …","Indicates the severity of a FoundationDB log entry","Rust representation of a simulated FoundationDB database","warn","warn always","Rust representation of a FoundationDB workload","A wrapper around a FoundationDB promise","Indicates if the value represents an average or not","Create a metric average entry","","","","","","","","","This method is called when the tester completes. A …","Get the client id of the workload","Get the client id of the workload","","","Return the name or description of the workload. Primarily …","Macro that can be used to create <code>Details</code> more easily.","","Spawn an async block and resolve all contained …","C++ string formatter of the metric","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Set the check timeout for this workload.","If a workload collects metrics (like latencies or …","Get the value of a parameter from the simulation config …","Get the process id of the workload","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The name of the metric","Get the current time","Get a determinist 32-bit random number","Resolve a FoundationDB promise by setting its value to a …","Set the process id of the workload","This method is called by the tester during the setup phase.","Get a determinist 64-bit random number","This method should run the actual test.","","Add a log entry in the FoundationDB logs","","","","","","","","","","","","","Create a metric value entry","The value of the metric","","","",""],"i":[0,11,0,11,11,0,0,0,0,0,11,11,0,0,1,1,9,7,1,11,9,7,1,11,23,9,9,11,11,23,0,7,0,1,9,7,1,11,23,23,9,9,9,7,1,11,1,9,9,7,9,23,9,23,11,9,9,7,1,11,9,7,1,11,9,7,1,11,1,1,9,7,1,11],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-2],1,[[3,[2]]],[[5,[4]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,6,7],8,[]],[9,10],[9,10],[11,11],[[-1,-2],8,[],[]],[-1,2,[]],0,[7,8],[-1,8,12],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,4,[]],[-1,[[13,[1]]],[]],[[9,14],[[15,[-1]]],16],[9,17],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[9,4],[9,18],[[7,19],8],[9,8],[[-1,6,7],8,[]],[9,17],[[-1,6,7],8,[]],[-1,-2,[],[]],[[9,11,-1,[13,[[8,[2,2]]]]],8,[[3,[[13,[20]]]]]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[-1,22,[]],[[-1,-2],1,[[3,[2]]],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[3,"Metric",0],[3,"String",74],[8,"Into",75],[15,"f64"],[8,"TryInto",75],[6,"SimDatabase",0],[3,"Promise",0],[15,"tuple"],[3,"WorkloadContext",0],[15,"usize"],[4,"Severity",0],[8,"Future",76],[3,"Vec",77],[15,"str"],[4,"Option",78],[8,"FromStr",79],[15,"u64"],[15,"u32"],[15,"bool"],[15,"u8"],[4,"Result",80],[3,"TypeId",81],[8,"RustWorkload",0]]},\
"foundationdb_sys":{"doc":"","t":"GGGRRGGRRRRRRRRRRRRRRRRGRRRGGGGGGGGRRRRRRRRRRRRRRRGRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRGGGRRRRRRRGGGRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRDDDDDDRRRRRRRRRRRRRRRRRRRRNRRRRRNRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRGGGGGGGGGGGGDGGRGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMFGFFFFFFFFFFFFFGFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLMMMMDMMGGGGGGGGGLLLLLLLLLLLLLLDMMMMMMMMMMMMDDDMMMMDMMMMDMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLGGGGGGGGGMMMMMMMM","n":["FDBCallback","FDBCluster","FDBConflictRangeType","FDBConflictRangeType_FDB_CONFLICT_RANGE_TYPE_READ","FDBConflictRangeType_FDB_CONFLICT_RANGE_TYPE_WRITE","FDBDatabase","FDBDatabaseOption","FDBDatabaseOption_FDB_DB_OPTION_DATACENTER_ID","FDBDatabaseOption_FDB_DB_OPTION_LOCATION_CACHE_SIZE","FDBDatabaseOption_FDB_DB_OPTION_MACHINE_ID","FDBDatabaseOption_FDB_DB_OPTION_MAX_WATCHES","FDBDatabaseOption_FDB_DB_OPTION_SNAPSHOT_RYW_DISABLE","FDBDatabaseOption_FDB_DB_OPTION_SNAPSHOT_RYW_ENABLE","FDBDatabaseOption_FDB_DB_OPTION_TEST_CAUSAL_READ_RISKY","FDBDatabaseOption_FDB_DB_OPTION_TRANSACTION_BYPASS_UNREADABLE","FDBDatabaseOption_FDB_DB_OPTION_TRANSACTION_CAUSAL_READ_RISKY","FDBDatabaseOption_FDB_DB_OPTION_TRANSACTION_INCLUDE_PORT_IN_ADDRESS","FDBDatabaseOption_FDB_DB_OPTION_TRANSACTION_LOGGING_MAX_FIELD_LENGTH","FDBDatabaseOption_FDB_DB_OPTION_TRANSACTION_MAX_RETRY_DELAY","FDBDatabaseOption_FDB_DB_OPTION_TRANSACTION_RETRY_LIMIT","FDBDatabaseOption_FDB_DB_OPTION_TRANSACTION_SIZE_LIMIT","FDBDatabaseOption_FDB_DB_OPTION_TRANSACTION_TIMEOUT","FDBDatabaseOption_FDB_DB_OPTION_USE_CONFIG_DATABASE","FDBErrorPredicate","FDBErrorPredicate_FDB_ERROR_PREDICATE_MAYBE_COMMITTED","FDBErrorPredicate_FDB_ERROR_PREDICATE_RETRYABLE","FDBErrorPredicate_FDB_ERROR_PREDICATE_RETRYABLE_NOT_COMMITTED","FDBFuture","FDBGetRangeReqAndResult","FDBKey","FDBKeyRange","FDBKeySelector","FDBKeyValue","FDBMappedKeyValue","FDBMutationType","FDBMutationType_FDB_MUTATION_TYPE_ADD","FDBMutationType_FDB_MUTATION_TYPE_AND","FDBMutationType_FDB_MUTATION_TYPE_APPEND_IF_FITS","FDBMutationType_FDB_MUTATION_TYPE_BIT_AND","FDBMutationType_FDB_MUTATION_TYPE_BIT_OR","FDBMutationType_FDB_MUTATION_TYPE_BIT_XOR","FDBMutationType_FDB_MUTATION_TYPE_BYTE_MAX","FDBMutationType_FDB_MUTATION_TYPE_BYTE_MIN","FDBMutationType_FDB_MUTATION_TYPE_COMPARE_AND_CLEAR","FDBMutationType_FDB_MUTATION_TYPE_MAX","FDBMutationType_FDB_MUTATION_TYPE_MIN","FDBMutationType_FDB_MUTATION_TYPE_OR","FDBMutationType_FDB_MUTATION_TYPE_SET_VERSIONSTAMPED_KEY","FDBMutationType_FDB_MUTATION_TYPE_SET_VERSIONSTAMPED_VALUE","FDBMutationType_FDB_MUTATION_TYPE_XOR","FDBNetworkOption","FDBNetworkOption_FDB_NET_OPTION_BUGGIFY_DISABLE","FDBNetworkOption_FDB_NET_OPTION_BUGGIFY_ENABLE","FDBNetworkOption_FDB_NET_OPTION_BUGGIFY_SECTION_ACTIVATED_PROBABILITY","FDBNetworkOption_FDB_NET_OPTION_BUGGIFY_SECTION_FIRED_PROBABILITY","FDBNetworkOption_FDB_NET_OPTION_CALLBACKS_ON_EXTERNAL_THREADS","FDBNetworkOption_FDB_NET_OPTION_CLIENT_BUGGIFY_DISABLE","FDBNetworkOption_FDB_NET_OPTION_CLIENT_BUGGIFY_ENABLE","FDBNetworkOption_FDB_NET_OPTION_CLIENT_BUGGIFY_SECTION_ACTIVATED_PROBABILITY","FDBNetworkOption_FDB_NET_OPTION_CLIENT_BUGGIFY_SECTION_FIRED_PROBABILITY","FDBNetworkOption_FDB_NET_OPTION_CLIENT_THREADS_PER_VERSION","FDBNetworkOption_FDB_NET_OPTION_CLUSTER_FILE","FDBNetworkOption_FDB_NET_OPTION_DISABLE_CLIENT_STATISTICS_LOGGING","FDBNetworkOption_FDB_NET_OPTION_DISABLE_LOCAL_CLIENT","FDBNetworkOption_FDB_NET_OPTION_DISABLE_MULTI_VERSION_CLIENT_API","FDBNetworkOption_FDB_NET_OPTION_DISTRIBUTED_CLIENT_TRACER","FDBNetworkOption_FDB_NET_OPTION_ENABLE_RUN_LOOP_PROFILING","FDBNetworkOption_FDB_NET_OPTION_ENABLE_SLOW_TASK_PROFILING","FDBNetworkOption_FDB_NET_OPTION_EXTERNAL_CLIENT","FDBNetworkOption_FDB_NET_OPTION_EXTERNAL_CLIENT_DIRECTORY","FDBNetworkOption_FDB_NET_OPTION_EXTERNAL_CLIENT_LIBRARY","FDBNetworkOption_FDB_NET_OPTION_EXTERNAL_CLIENT_TRANSPORT_ID","FDBNetworkOption_FDB_NET_OPTION_KNOB","FDBNetworkOption_FDB_NET_OPTION_LOCAL_ADDRESS","FDBNetworkOption_FDB_NET_OPTION_SUPPORTED_CLIENT_VERSIONS","FDBNetworkOption_FDB_NET_OPTION_TLS_CA_BYTES","FDBNetworkOption_FDB_NET_OPTION_TLS_CA_PATH","FDBNetworkOption_FDB_NET_OPTION_TLS_CERT_BYTES","FDBNetworkOption_FDB_NET_OPTION_TLS_CERT_PATH","FDBNetworkOption_FDB_NET_OPTION_TLS_KEY_BYTES","FDBNetworkOption_FDB_NET_OPTION_TLS_KEY_PATH","FDBNetworkOption_FDB_NET_OPTION_TLS_PASSWORD","FDBNetworkOption_FDB_NET_OPTION_TLS_PLUGIN","FDBNetworkOption_FDB_NET_OPTION_TLS_VERIFY_PEERS","FDBNetworkOption_FDB_NET_OPTION_TRACE_CLOCK_SOURCE","FDBNetworkOption_FDB_NET_OPTION_TRACE_ENABLE","FDBNetworkOption_FDB_NET_OPTION_TRACE_FILE_IDENTIFIER","FDBNetworkOption_FDB_NET_OPTION_TRACE_FORMAT","FDBNetworkOption_FDB_NET_OPTION_TRACE_LOG_GROUP","FDBNetworkOption_FDB_NET_OPTION_TRACE_MAX_LOGS_SIZE","FDBNetworkOption_FDB_NET_OPTION_TRACE_PARTIAL_FILE_SUFFIX","FDBNetworkOption_FDB_NET_OPTION_TRACE_ROLL_SIZE","FDBReadBlobGranuleContext","FDBResult","FDBStreamingMode","FDBStreamingMode_FDB_STREAMING_MODE_EXACT","FDBStreamingMode_FDB_STREAMING_MODE_ITERATOR","FDBStreamingMode_FDB_STREAMING_MODE_LARGE","FDBStreamingMode_FDB_STREAMING_MODE_MEDIUM","FDBStreamingMode_FDB_STREAMING_MODE_SERIAL","FDBStreamingMode_FDB_STREAMING_MODE_SMALL","FDBStreamingMode_FDB_STREAMING_MODE_WANT_ALL","FDBTenant","FDBTransaction","FDBTransactionOption","FDBTransactionOption_FDB_TR_OPTION_ACCESS_SYSTEM_KEYS","FDBTransactionOption_FDB_TR_OPTION_AUTO_THROTTLE_TAG","FDBTransactionOption_FDB_TR_OPTION_BYPASS_UNREADABLE","FDBTransactionOption_FDB_TR_OPTION_CAUSAL_READ_DISABLE","FDBTransactionOption_FDB_TR_OPTION_CAUSAL_READ_RISKY","FDBTransactionOption_FDB_TR_OPTION_CAUSAL_WRITE_RISKY","FDBTransactionOption_FDB_TR_OPTION_CHECK_WRITES_ENABLE","FDBTransactionOption_FDB_TR_OPTION_COMMIT_ON_FIRST_PROXY","FDBTransactionOption_FDB_TR_OPTION_DEBUG_DUMP","FDBTransactionOption_FDB_TR_OPTION_DEBUG_RETRY_LOGGING","FDBTransactionOption_FDB_TR_OPTION_DEBUG_TRANSACTION_IDENTIFIER","FDBTransactionOption_FDB_TR_OPTION_DURABILITY_DATACENTER","FDBTransactionOption_FDB_TR_OPTION_DURABILITY_DEV_NULL_IS_WEB_SCALE","FDBTransactionOption_FDB_TR_OPTION_DURABILITY_RISKY","FDBTransactionOption_FDB_TR_OPTION_EXPENSIVE_CLEAR_COST_ESTIMATION_ENABLE","FDBTransactionOption_FDB_TR_OPTION_FIRST_IN_BATCH","FDBTransactionOption_FDB_TR_OPTION_INCLUDE_PORT_IN_ADDRESS","FDBTransactionOption_FDB_TR_OPTION_INITIALIZE_NEW_DATABASE","FDBTransactionOption_FDB_TR_OPTION_LOCK_AWARE","FDBTransactionOption_FDB_TR_OPTION_LOG_TRANSACTION","FDBTransactionOption_FDB_TR_OPTION_MAX_RETRY_DELAY","FDBTransactionOption_FDB_TR_OPTION_NEXT_WRITE_NO_WRITE_CONFLICT_RANGE","FDBTransactionOption_FDB_TR_OPTION_PRIORITY_BATCH","FDBTransactionOption_FDB_TR_OPTION_PRIORITY_SYSTEM_IMMEDIATE","FDBTransactionOption_FDB_TR_OPTION_RAW_ACCESS","FDBTransactionOption_FDB_TR_OPTION_READ_AHEAD_DISABLE","FDBTransactionOption_FDB_TR_OPTION_READ_LOCK_AWARE","FDBTransactionOption_FDB_TR_OPTION_READ_SYSTEM_KEYS","FDBTransactionOption_FDB_TR_OPTION_READ_YOUR_WRITES_DISABLE","FDBTransactionOption_FDB_TR_OPTION_REPORT_CONFLICTING_KEYS","FDBTransactionOption_FDB_TR_OPTION_RETRY_LIMIT","FDBTransactionOption_FDB_TR_OPTION_SERVER_REQUEST_TRACING","FDBTransactionOption_FDB_TR_OPTION_SIZE_LIMIT","FDBTransactionOption_FDB_TR_OPTION_SKIP_GRV_CACHE","FDBTransactionOption_FDB_TR_OPTION_SNAPSHOT_RYW_DISABLE","FDBTransactionOption_FDB_TR_OPTION_SNAPSHOT_RYW_ENABLE","FDBTransactionOption_FDB_TR_OPTION_SPAN_PARENT","FDBTransactionOption_FDB_TR_OPTION_SPECIAL_KEY_SPACE_ENABLE_WRITES","FDBTransactionOption_FDB_TR_OPTION_SPECIAL_KEY_SPACE_RELAXED","FDBTransactionOption_FDB_TR_OPTION_TAG","FDBTransactionOption_FDB_TR_OPTION_TIMEOUT","FDBTransactionOption_FDB_TR_OPTION_TRANSACTION_LOGGING_ENABLE","FDBTransactionOption_FDB_TR_OPTION_TRANSACTION_LOGGING_MAX_FIELD_LENGTH","FDBTransactionOption_FDB_TR_OPTION_USED_DURING_COMMIT_PROTECTION_DISABLE","FDBTransactionOption_FDB_TR_OPTION_USE_GRV_CACHE","FDBTransactionOption_FDB_TR_OPTION_USE_PROVISIONAL_PROXIES","FDB_API_VERSION","FDB_cluster","FDB_database","FDB_future","FDB_result","FDB_tenant","FDB_transaction","INT16_MAX","INT16_MIN","INT32_MAX","INT32_MIN","INT8_MAX","INT8_MIN","INTPTR_MAX","INTPTR_MIN","INT_FAST16_MAX","INT_FAST16_MIN","INT_FAST32_MAX","INT_FAST32_MIN","INT_FAST8_MAX","INT_FAST8_MIN","INT_LEAST16_MAX","INT_LEAST16_MIN","INT_LEAST32_MAX","INT_LEAST32_MIN","INT_LEAST8_MAX","INT_LEAST8_MIN","None","PTRDIFF_MAX","PTRDIFF_MIN","SIG_ATOMIC_MAX","SIG_ATOMIC_MIN","SIZE_MAX","Some","UINT16_MAX","UINT32_MAX","UINT8_MAX","UINTPTR_MAX","UINT_FAST16_MAX","UINT_FAST32_MAX","UINT_FAST8_MAX","UINT_LEAST16_MAX","UINT_LEAST32_MAX","UINT_LEAST8_MAX","WINT_MAX","WINT_MIN","_ATFILE_SOURCE","_BITS_STDINT_INTN_H","_BITS_STDINT_UINTN_H","_BITS_TIME64_H","_BITS_TYPESIZES_H","_BITS_TYPES_H","_BITS_WCHAR_H","_DEFAULT_SOURCE","_FEATURES_H","_POSIX_C_SOURCE","_POSIX_SOURCE","_STDC_PREDEF_H","_STDINT_H","_SYS_CDEFS_H","__FD_SETSIZE","__GLIBC_MINOR__","__GLIBC_USE_DEPRECATED_GETS","__GLIBC_USE_DEPRECATED_SCANF","__GLIBC_USE_IEC_60559_BFP_EXT","__GLIBC_USE_IEC_60559_BFP_EXT_C2X","__GLIBC_USE_IEC_60559_EXT","__GLIBC_USE_IEC_60559_FUNCS_EXT","__GLIBC_USE_IEC_60559_FUNCS_EXT_C2X","__GLIBC_USE_IEC_60559_TYPES_EXT","__GLIBC_USE_ISOC2X","__GLIBC_USE_LIB_EXT2","__GLIBC__","__GNU_LIBRARY__","__HAVE_GENERIC_SELECTION","__INO_T_MATCHES_INO64_T","__KERNEL_OLD_TIMEVAL_MATCHES_TIMEVAL64","__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI","__OFF_T_MATCHES_OFF64_T","__RLIM_T_MATCHES_RLIM64_T","__STATFS_MATCHES_STATFS64","__STDC_IEC_559_COMPLEX__","__STDC_IEC_559__","__STDC_IEC_60559_BFP__","__STDC_IEC_60559_COMPLEX__","__STDC_ISO_10646__","__SYSCALL_WORDSIZE","__TIMESIZE","__USE_ATFILE","__USE_FORTIFY_LEVEL","__USE_ISOC11","__USE_ISOC95","__USE_ISOC99","__USE_MISC","__USE_POSIX","__USE_POSIX199309","__USE_POSIX199506","__USE_POSIX2","__USE_POSIX_IMPLICITLY","__USE_XOPEN2K","__USE_XOPEN2K8","__WORDSIZE","__WORDSIZE_TIME64_COMPAT32","__blkcnt64_t","__blkcnt_t","__blksize_t","__caddr_t","__clock_t","__clockid_t","__daddr_t","__dev_t","__fsblkcnt64_t","__fsblkcnt_t","__fsfilcnt64_t","__fsfilcnt_t","__fsid_t","__fsword_t","__gid_t","__glibc_c99_flexarr_available","__id_t","__ino64_t","__ino_t","__int16_t","__int32_t","__int64_t","__int8_t","__int_least16_t","__int_least32_t","__int_least64_t","__int_least8_t","__intmax_t","__intptr_t","__key_t","__loff_t","__mode_t","__nlink_t","__off64_t","__off_t","__pid_t","__quad_t","__rlim64_t","__rlim_t","__sig_atomic_t","__socklen_t","__ssize_t","__suseconds64_t","__suseconds_t","__syscall_slong_t","__syscall_ulong_t","__time_t","__timer_t","__u_char","__u_int","__u_long","__u_quad_t","__u_short","__uid_t","__uint16_t","__uint32_t","__uint64_t","__uint8_t","__uint_least16_t","__uint_least32_t","__uint_least64_t","__uint_least8_t","__uintmax_t","__useconds_t","__val","begin","begin","begin_key","begin_key","begin_key_length","begin_key_length","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffer","buffer","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","data","data","debugNoMaterialize","debugNoMaterialize","end","end","end_key","end_key","end_key_length","end_key_length","fdb_add_network_thread_completion_hook","fdb_bool_t","fdb_create_database","fdb_database_create_snapshot","fdb_database_create_transaction","fdb_database_destroy","fdb_database_force_recovery_with_data_loss","fdb_database_get_main_thread_busyness","fdb_database_get_server_protocol","fdb_database_open_tenant","fdb_database_purge_blob_granules","fdb_database_reboot_worker","fdb_database_set_option","fdb_database_wait_purge_granules_complete","fdb_error_predicate","fdb_error_t","fdb_future_block_until_ready","fdb_future_cancel","fdb_future_destroy","fdb_future_get_error","fdb_future_get_int64","fdb_future_get_key","fdb_future_get_key_array","fdb_future_get_keyrange_array","fdb_future_get_keyvalue_array","fdb_future_get_mappedkeyvalue_array","fdb_future_get_string_array","fdb_future_get_uint64","fdb_future_get_value","fdb_future_is_ready","fdb_future_release_memory","fdb_future_set_callback","fdb_get_client_version","fdb_get_error","fdb_get_max_api_version","fdb_network_set_option","fdb_result_destroy","fdb_result_get_keyvalue_array","fdb_run_network","fdb_select_api_version_impl","fdb_setup_network","fdb_stop_network","fdb_tenant_create_transaction","fdb_tenant_destroy","fdb_transaction_add_conflict_range","fdb_transaction_atomic_op","fdb_transaction_cancel","fdb_transaction_clear","fdb_transaction_clear_range","fdb_transaction_commit","fdb_transaction_destroy","fdb_transaction_get","fdb_transaction_get_addresses_for_key","fdb_transaction_get_approximate_size","fdb_transaction_get_blob_granule_ranges","fdb_transaction_get_committed_version","fdb_transaction_get_estimated_range_size_bytes","fdb_transaction_get_key","fdb_transaction_get_mapped_range","fdb_transaction_get_range","fdb_transaction_get_range_split_points","fdb_transaction_get_read_version","fdb_transaction_get_versionstamp","fdb_transaction_on_error","fdb_transaction_read_blob_granules","fdb_transaction_reset","fdb_transaction_set","fdb_transaction_set_option","fdb_transaction_set_read_version","fdb_transaction_watch","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","free_load_f","free_load_f","from","from","from","from","from","from","from","from","from","from","from","from","from","from","getRange","getRange","get_load_f","get_load_f","getrangereqandresult","granuleParallelism","granuleParallelism","int_fast16_t","int_fast32_t","int_fast64_t","int_fast8_t","int_least16_t","int_least32_t","int_least64_t","int_least8_t","intmax_t","into","into","into","into","into","into","into","into","into","into","into","into","into","into","key","key","key","key","key","key","key","key","key","key_length","key_length","key_length","key_length","keyrange","keyselector","keyvalue","m_capacity","m_capacity","m_size","m_size","mappedkeyvalue","offset","offset","orEqual","orEqual","readgranulecontext","start_load_f","start_load_f","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uint_fast16_t","uint_fast32_t","uint_fast64_t","uint_fast8_t","uint_least16_t","uint_least32_t","uint_least64_t","uint_least8_t","uintmax_t","userContext","userContext","value","value","value","value","value_length","value_length"],"q":[[0,"foundationdb_sys"],[624,"core::fmt"],[625,"core::fmt"],[626,"core::any"]],"do value.","","","","","","Some value of type <code>T</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,0,0,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,21,11,22,13,22,13,1,2,3,4,5,6,7,8,9,10,11,12,13,14,1,2,3,4,5,6,7,8,9,10,11,12,13,14,23,12,1,2,3,4,5,6,7,8,9,10,11,12,13,14,1,2,3,4,5,6,7,8,9,10,11,12,13,14,21,11,24,14,21,11,22,13,22,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,24,14,1,2,3,4,5,6,7,8,9,10,11,12,13,14,23,12,24,14,0,24,14,0,0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,0,25,26,27,23,8,9,10,12,25,26,8,9,0,0,0,21,11,21,11,0,27,10,27,10,0,24,14,1,2,3,4,5,6,7,8,9,10,11,12,13,14,1,2,3,4,5,6,7,8,9,10,11,12,13,14,1,2,3,4,5,6,7,8,9,10,11,12,13,14,1,2,3,4,5,6,7,8,9,10,11,12,13,14,0,0,0,0,0,0,0,0,0,24,14,26,23,9,12,26,9],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[1,1],[2,2],[3,3],[4,4],[5,5],[6,6],[7,7],[8,8],[9,9],[10,10],[11,11],[12,12],[13,13],[14,14],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,16],17],[[2,16],17],[[3,16],17],[[4,16],17],[[5,16],17],[[6,16],17],[[7,16],17],[[8,16],17],[[9,16],17],[[10,16],17],[[11,16],17],[[12,16],17],[[13,16],17],[[14,16],17],0,0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,[[18,[-2]]],[],[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],[-1,19,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"c":[],"p":[[3,"__fsid_t",0],[3,"FDB_future",0],[3,"FDB_result",0],[3,"FDB_cluster",0],[3,"FDB_database",0],[3,"FDB_tenant",0],[3,"FDB_transaction",0],[3,"key",0],[3,"keyvalue",0],[3,"keyselector",0],[3,"getrangereqandresult",0],[3,"mappedkeyvalue",0],[3,"keyrange",0],[3,"readgranulecontext",0],[15,"tuple"],[3,"Formatter",624],[6,"Result",624],[4,"Result",625],[3,"TypeId",626],[6,"FDBCallback",0],[6,"FDBGetRangeReqAndResult",0],[6,"FDBKeyRange",0],[6,"FDBMappedKeyValue",0],[6,"FDBReadBlobGranuleContext",0],[6,"FDBKey",0],[6,"FDBKeyValue",0],[6,"FDBKeySelector",0]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
